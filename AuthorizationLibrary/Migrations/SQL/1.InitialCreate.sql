DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM pg_namespace WHERE nspname = 'Authorization') THEN
        CREATE SCHEMA "Authorization";
    END IF;
END $EF$;
CREATE TABLE IF NOT EXISTS "Authorization"."__MigrationsHistory" (
    migration_id character varying(150) NOT NULL,
    product_version character varying(32) NOT NULL,
    CONSTRAINT pk___migrations_history PRIMARY KEY (migration_id)
);

START TRANSACTION;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM pg_namespace WHERE nspname = 'Authorization') THEN
        CREATE SCHEMA "Authorization";
    END IF;
END $EF$;

CREATE TABLE "Authorization"."Users" (
    id bigint GENERATED BY DEFAULT AS IDENTITY,
    name character varying(65) NOT NULL,
    second_name character varying(75) NOT NULL,
    registration_date timestamp with time zone NOT NULL,
    last_modified_date timestamp with time zone,
    last_entered_at timestamp with time zone NOT NULL,
    additional_info character varying(500),
    refresh_token text NOT NULL,
    refresh_token_expiration_date timestamp with time zone NOT NULL,
    CONSTRAINT pk_users PRIMARY KEY (id)
);

CREATE TABLE "Authorization"."Credentials" (
    id bigint GENERATED BY DEFAULT AS IDENTITY,
    email character varying(70) NOT NULL,
    user_id bigint NOT NULL,
    CONSTRAINT pk_credentials PRIMARY KEY (id),
    CONSTRAINT fk_credentials_users_user_id FOREIGN KEY (user_id) REFERENCES "Authorization"."Users" (id) ON DELETE CASCADE
);

CREATE TABLE "Authorization"."AuthorizationProvider" (
    id uuid NOT NULL,
    user_credential_id bigint NOT NULL,
    discriminator character varying(34) NOT NULL,
    authorization_type integer,
    o_auth_token text,
    o_auth_client_id text,
    password_hash text,
    last_modified_time timestamp with time zone,
    CONSTRAINT pk_authorization_provider PRIMARY KEY (id),
    CONSTRAINT fk_authorization_provider_credentials_user_credential_id FOREIGN KEY (user_credential_id) REFERENCES "Authorization"."Credentials" (id) ON DELETE CASCADE
);

CREATE UNIQUE INDEX ix_authorization_provider_user_credential_id ON "Authorization"."AuthorizationProvider" (user_credential_id);

CREATE UNIQUE INDEX ix_credentials_email ON "Authorization"."Credentials" (email);

CREATE INDEX ix_credentials_user_id ON "Authorization"."Credentials" (user_id);

INSERT INTO "Authorization"."__MigrationsHistory" (migration_id, product_version)
VALUES ('20230521205435_InitialCreate', '8.0.0-preview.3.23174.2');

COMMIT;

